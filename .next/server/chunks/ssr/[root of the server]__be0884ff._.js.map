{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\n// The googleAI() plugin will automatically look for GOOGLE_API_KEY\n// in the environment variables (e.g., from .env file)\n// if 'apiKey' is not explicitly provided here.\n\n// Determine the model name to use from .env or fallback to a default.\n// AI_MODEL_ID from .env should be the plain model name, e.g., \"gemini-1.5-flash-latest\".\nconst modelName = process.env.AI_MODEL_ID || 'gemini-1.5-flash-latest';\n\n// The 'model' field in genkit() config expects 'pluginProvider/modelName' format for strings.\nconst qualifiedModelName = `googleai/${modelName}`;\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: qualifiedModelName, // Use the fully qualified model name\n});\n\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;AAAA;;;AAEA,mEAAmE;AACnE,sDAAsD;AACtD,+CAA+C;AAE/C,sEAAsE;AACtE,yFAAyF;AACzF,MAAM,YAAY,QAAQ,GAAG,CAAC,WAAW,IAAI;AAE7C,8FAA8F;AAC9F,MAAM,qBAAqB,CAAC,SAAS,EAAE,WAAW;AAE3C,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/data/projects.ts"],"sourcesContent":["\nimport type { Project } from '@/types/project';\n\nexport const projects: Project[] = [\n  {\n    id: '1',\n    title: 'VIZIOONPOSH',\n    description: 'Seletor de Temas Oh My Posh é uma ferramenta interativa de linha de comando que transforma a experiência de personalização do Oh My Posh. Desenvolvida para simplificar a navegação, visualização e aplicação de temas.',\n    imageUrl: 'https://github.com/dvizioon/VIZIOONPOSH/raw/main/screenshots/logo.png',\n    dataAiHint: 'linux gui',\n    link: 'https://dvizioon.github.io/VIZIOONPOSH/',\n    repositoryUrl: 'https://github.com/dvizioon/VIZIOONPOSH',\n    technologies: ['PowerShell', 'CLI'],\n    createdAt: '2023-03-15',\n  },\n  {\n    id: '2',\n    title: 'VIZIOON-DELIVERY',\n    description: 'Com PHP puro, desenvolvi um sistema de delivery que atende desde a realização de pedidos até a gestão de entregas. A aplicação oferece um painel administrativo intuitivo para os restaurantes e uma interface amigável para os clientes.',\n    imageUrl: 'https://github.com/dvizioon/VIZIOON-DELIVERY/raw/main/screenshots/logo.png',\n    dataAiHint: 'delivery system',\n    repositoryUrl: 'https://github.com/dvizioon/VIZIOON-DELIVERY',\n    technologies: ['PHP', 'MySQL', 'HTML', 'CSS', 'JavaScript'],\n    createdAt: '2022-07-20',\n  },\n  {\n    id: '3',\n    title: 'SISTEMA-IMC',\n    description: 'Sistema para calcular IMC desenvolvido com Flask API e explorando conceitos de IA generativa para fornecer insights sobre o resultado.',\n    imageUrl: 'https://github.com/dvizioon/SISTEMA-IMC/raw/main/assets/screenShots/01.png',\n    dataAiHint: 'health calculator',\n    repositoryUrl: 'https://github.com/dvizioon/SISTEMA-IMC',\n    technologies: ['Python', 'Flask', 'HTML', 'CSS', 'GenAI'],\n    createdAt: '2023-10-05',\n  },\n  {\n    id: '4',\n    title: 'CRIP-TEXTO',\n    description: 'Encriptador de Texto desenvolvido como parte do desafio BSP4. Ferramenta para criptografar e descriptografar mensagens de texto.',\n    imageUrl: 'https://github.com/dvizioon/CRIP-TEXTO/raw/main/Assets/Screenshots/01.png',\n    dataAiHint: 'text encryption',\n    link: 'https://dvizioon.github.io/CRIP-TEXTO/',\n    repositoryUrl: 'https://github.com/dvizioon/CRIP-TEXTO',\n    technologies: ['JavaScript', 'HTML', 'CSS'],\n    createdAt: '2023-01-10',\n  },\n  {\n    id: '5',\n    title: 'SYNC-CALCULATOR',\n    description: 'Calculadora com funcionalidades de IA, desenvolvida utilizando C#, Python e SQLite. Explora a integração de diferentes tecnologias para uma ferramenta inteligente.',\n    imageUrl: 'https://github.com/scriptsync/SYNC-CALCULATOR/raw/main/Img/Interface.png?raw=true',\n    dataAiHint: 'ai calculator',\n    repositoryUrl: 'https://github.com/dvizioon/SYNC-CALCULATOR',\n    technologies: ['C#', 'Python', 'SQLite', 'AI'],\n    createdAt: '2024-02-28',\n  },\n  {\n    id: '6',\n    title: 'ECO-BUMBAR',\n    description: 'Sistema PHP para o desafio FAPEMA sobre ecologia, permitindo a divulgação de um evento fictício. Focado em eventos e conscientização ambiental.',\n    imageUrl: 'https://github.com/dvizioon/ECO-BUMBAR/raw/main/Assets/Logo.png',\n    dataAiHint: 'ecology event',\n    repositoryUrl: 'https://github.com/dvizioon/ECO-BUMBAR',\n    technologies: ['PHP', 'HTML', 'CSS'],\n    createdAt: '2022-11-01',\n  }\n];\n"],"names":[],"mappings":";;;AAGO,MAAM,WAAsB;IACjC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;QACZ,MAAM;QACN,eAAe;QACf,cAAc;YAAC;YAAc;SAAM;QACnC,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;QACZ,eAAe;QACf,cAAc;YAAC;YAAO;YAAS;YAAQ;YAAO;SAAa;QAC3D,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;QACZ,eAAe;QACf,cAAc;YAAC;YAAU;YAAS;YAAQ;YAAO;SAAQ;QACzD,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;QACZ,MAAM;QACN,eAAe;QACf,cAAc;YAAC;YAAc;YAAQ;SAAM;QAC3C,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;QACZ,eAAe;QACf,cAAc;YAAC;YAAM;YAAU;YAAU;SAAK;QAC9C,WAAW;IACb;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,UAAU;QACV,YAAY;QACZ,eAAe;QACf,cAAc;YAAC;YAAO;YAAQ;SAAM;QACpC,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/dvizioon-agent-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A simple AI agent for the DVIION portfolio.\n *\n * - askDvizioonAgent - A function that handles user interaction with the agent.\n * - DvizioonAgentInput - The input type for the askDvizioonAgent function.\n * - DvizioonAgentOutput - The return type for the askDvizioonAgent function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\nimport { projects as projectData } from '@/data/projects'; // Import project data\nimport type { Project } from '@/types/project';\n\nconst DvizioonAgentInputSchema = z.object({\n  userMessage: z.string().describe('The message from the user to the agent.'),\n  currentLanguage: z.enum(['pt', 'en']).describe('The current language setting of the website (pt or en). The agent should respond in this language.'),\n});\nexport type DvizioonAgentInput = z.infer<typeof DvizioonAgentInputSchema>;\n\nconst DvizioonAgentOutputSchema = z.object({\n  agentResponse: z.string().describe('The agent\\'s response to the user in Markdown format and in the specified currentLanguage.'),\n});\nexport type DvizioonAgentOutput = z.infer<typeof DvizioonAgentOutputSchema>;\n\n// Schema for the project details tool\nconst ProjectDetailsToolInputSchema = z.object({\n  projectName: z.string().describe(\"The name of the project the user is asking about. Try to match it closely with project titles available if the user provides a partial name.\"),\n});\n\nconst ProjectSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  description: z.string().describe(\"A detailed description of the project.\"),\n  imageUrl: z.string(),\n  dataAiHint: z.string(),\n  link: z.string().optional().describe(\"URL to the live demo of the project, if available.\"),\n  repositoryUrl: z.string().optional().describe(\"URL to the source code repository (e.g., GitHub), if available.\"),\n  technologies: z.array(z.string()).optional().describe(\"A list of technologies used in the project.\"),\n  createdAt: z.string().describe(\"The creation date of the project in YYYY-MM-DD format.\"),\n});\n\nconst ProjectDetailsToolOutputSchema = z.object({\n  found: z.boolean().describe(\"Whether the project was found.\"),\n  details: ProjectSchema.optional().describe(\"The details of the project if found. Includes title, description, technologies, links, and creation date.\"),\n  message: z.string().optional().describe(\"A message if the project was not found or other relevant info, like if a partial match was found.\"),\n});\n\n// Tool to get project details\nconst getProjectDetailsTool = ai.defineTool(\n  {\n    name: 'getProjectDetailsTool',\n    description: 'Fetches details for a specific project from the portfolio if the user asks about one. Use this to provide comprehensive information about a project.',\n    inputSchema: ProjectDetailsToolInputSchema,\n    outputSchema: ProjectDetailsToolOutputSchema,\n  },\n  async (input) => {\n    const projectNameToFind = input.projectName.toLowerCase().trim();\n    const project = projectData.find(p => p.title.toLowerCase().trim() === projectNameToFind);\n\n    if (project) {\n      return {\n        found: true,\n        details: project,\n      };\n    } else {\n      // Try a partial match if no exact match\n      const partialMatch = projectData.find(p => p.title.toLowerCase().includes(projectNameToFind));\n      if (partialMatch) {\n        return {\n          found: true,\n          details: partialMatch,\n          message: `Found a close match: ${partialMatch.title}.` // Provide feedback about partial match\n        }\n      }\n      return {\n        found: false,\n        message: `I couldn't find specific details for a project titled \"${input.projectName}\". You can see all available projects in the portfolio section.`,\n      };\n    }\n  }\n);\n\n\nexport async function askDvizioonAgent(input: DvizioonAgentInput): Promise<DvizioonAgentOutput> {\n  return dvizioonAgentFlow(input);\n}\n\nconst dvizioonPrompt = ai.definePrompt({\n  name: 'dvizioonAgentPrompt',\n  input: {schema: DvizioonAgentInputSchema},\n  output: {schema: DvizioonAgentOutputSchema},\n  tools: [getProjectDetailsTool],\n  prompt: `You are Vizioon, a friendly and helpful AI assistant for the DVIION Technology portfolio website.\nYour creator is Daniel Estevão Martins Mendes, also known as Dvizioon. This portfolio and you were built with Next.js, Three.js, ShadCN UI, Tailwind CSS and Genkit. You were \"made in n8n\" conceptually.\nKeep your responses concise, informative, and engaging. Respond in Markdown format.\nALWAYS respond in the language specified by 'currentLanguage': '{{currentLanguage}}'.\n\nYou can talk about Daniel's skills (C++, C#, Node.js, TypeScript, PHP, Python, Flask, Django, Genkit, etc.), his projects, or general tech topics.\nIf asked about Daniel, highlight his dedication and passion for backend development and innovative solutions.\n\nIf the user asks about a specific project by name (even if misspelled or partial), use the 'getProjectDetailsTool' to find more details about it.\nWhen the tool returns 'found: true':\n  - Present the project's title, its description, and the technologies used.\n  - If the project has a live link ('details.link'), state: \"You can check out a live demo here: [link]\".\n  - If the project has a repository URL ('details.repositoryUrl'), state: \"The source code is available at: [repositoryUrl]\".\n  - If the tool also provides a 'message' in its output (e.g., \"Found a close match: Actual Project Title.\"), you can inform the user, for example: \"I found a close match for your query: 'Actual Project Title'. Here are its details: ...\" and then proceed with the details.\n  - Adapt all information to the '{{currentLanguage}}'.\n\nWhen the tool returns 'found: false':\n  - Use the 'message' field from the tool's output to inform the user politely that the project was not found, for example: \"I couldn't find specific details for a project titled 'XYZ'. You can see all available projects in the portfolio section.\" Make sure this message is also in '{{currentLanguage}}'.\n\nUser's message: {{{userMessage}}}\n\nAgent's response (in {{currentLanguage}} and Markdown):`,\n});\n\nconst dvizioonAgentFlow = ai.defineFlow(\n  {\n    name: 'dvizioonAgentFlow',\n    inputSchema: DvizioonAgentInputSchema,\n    outputSchema: DvizioonAgentOutputSchema,\n  },\n  async (input) => {\n    const {output} = await dvizioonPrompt(input);\n    if (!output) {\n      const errorMessage = input.currentLanguage === 'pt' ? \n        \"Desculpe, não consegui processar isso. Você pode tentar reformular?\" :\n        \"I'm sorry, I couldn't process that. Can you try rephrasing?\";\n      return { agentResponse: errorMessage };\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/portfolio/PortfolioClientPage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/portfolio/PortfolioClientPage.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/portfolio/PortfolioClientPage.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoT,GACjV,kFACA","debugId":null}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/portfolio/PortfolioClientPage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/portfolio/PortfolioClientPage.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/portfolio/PortfolioClientPage.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import PortfolioClientPage from '@/components/portfolio/PortfolioClientPage';\n\n// The Home component simply renders the PortfolioClientPage,\n// which is responsible for its own layout, including the Header.\nexport default function Home() {\n  return (\n    <PortfolioClientPage />\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAIe,SAAS;IACtB,qBACE,8OAAC,sJAAA,CAAA,UAAmB;;;;;AAExB","debugId":null}}]
}